val title = "Output transformers"
mbMetadata = Some( SubsectionMeta( level, title ) )

(level : Int)[SubsectionMeta]~()>

In the header or any code section of an untemplate, you can define an `OutputTransformer`,
like this:

```scala
outputTransformer = myOutputTranformer
```

As the name suggests, an output transformer will simply transform
the function output.

If you haven't defied a custom output metadata type,
then it must be a `Function1` that maps `untemplate.Result[Nothing] => `untemplate.Result[Nothing]`.

If you have defined an output metadata type, say `HttpMetadata`, then it must be
a function `untemplate.Result[HttpMetadata] => `untemplate.Result[HttpMetadata]`.

By default, every untemplate output travels through the output transformer `identity`.
But you can set your own.

You can set output transfers as above, "by hand", or you can use an [`untemplate.Customizer`](#customizers)
to transform a whole class of untemplates. For example, you could have all untemplates
generated from a file like `<something>.md.untemplate` pass through an output transformer that
converts Markdown to HTML.

See more on customizers below.
