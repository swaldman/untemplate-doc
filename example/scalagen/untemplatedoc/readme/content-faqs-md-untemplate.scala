// DO NOT HAND EDIT -- Autogenerated from 'content-faqs.md.untemplate' at 2025-08-16T21:14:28.334950Z
package untemplatedoc.readme

import java.io.{Writer,StringWriter}
import scala.collection.{immutable,mutable}

import untemplatedoc.*
import java.nio.file.Files
import com.mchange.codegenutil.*



val Untemplate_content_faqs_md = new untemplate.Untemplate[Int,SubsectionMeta]:
  val UntemplateFunction                    : untemplate.Untemplate[Int,SubsectionMeta] = this
  val UntemplateName                        : String = "content_faqs_md"
  val UntemplatePackage                     : String = "untemplatedoc.readme"
  val UntemplateInputName                   : String = "level"
  val UntemplateInputTypeDeclared           : String = "Int"
  val UntemplateInputTypeCanonical          : Option[String] = untemplate.Macro.nonEmptyStringOption( untemplate.Macro.recursiveCanonicalName[Int] )
  val UntemplateInputDefaultArgument        : Option[Int] = (None : Option[Int])
  val UntemplateOutputMetadataTypeDeclared  : String = "SubsectionMeta"
  val UntemplateOutputMetadataTypeCanonical : Option[String] = untemplate.Macro.nonEmptyStringOption( untemplate.Macro.recursiveCanonicalName[SubsectionMeta] )
  val UntemplateHeaderNote                  : String = ""
  val UntemplateLastModified                : Option[Long] = Some(1696892785000L)
  val UntemplateSynthetic                   : Boolean = false

  val UntemplateAttributes : immutable.Map[String,Any] = immutable.Map.empty


  def apply(level : Int) : untemplate.Result[SubsectionMeta] =
    val writer             : StringWriter = new StringWriter(12690)
    val attrs              : immutable.Map[String,Any] = UntemplateAttributes
    var mbMetadata         : Option[SubsectionMeta] = None
    var outputTransformer  : Function1[untemplate.Result[SubsectionMeta],untemplate.Result[SubsectionMeta]] = readme.subsection_content_transformer_md

    val title = "FAQs"
    mbMetadata = Some( SubsectionMeta( level, title ) )

      val block0 = new Function0[String]:
        def apply() : String =
          "\n### How does the untemplate library transform untemplate source file names?\n\n#### Transforming untemplate source file to Scala function names\n\nUntemplate function names by default derive from the name of their encloding source file.\nUntemplate source files end with the suffix `.untemplate`. That suffix is stripped, and then\nany special characters that wouldn't be legal in a scala function name, including any `-` or `.`\ncharacters, are replaced with underscore (`_`).\n\n#### Transforming untemplate source file to Scala source file names\n\nAlthough usually you are not interested in the Scala source code files generated from untemplates, but occasionally\nyou may want tools to see or inspect them, or documentation to expose them. Generated source\ncode files originally just took the full untemplate source file name (including the `.untemplate` suffix) + a `.scala` suffix, but\nsome Scala tooling [has trouble](https://github.com/lampepfl/dotty/issues/16036#issuecomment-1707400364)\nwith multiply dotted source files. So, currently generated source files take the full untemplate source file name,\nthen _convert any `.` chars to `-`_, and then append `.scala`\n"
      writer.write(block0())

    outputTransformer( untemplate.Result( mbMetadata, writer.toString ) )

  end apply
end Untemplate_content_faqs_md

def content_faqs_md(level : Int) : untemplate.Result[SubsectionMeta] = Untemplate_content_faqs_md( level )
